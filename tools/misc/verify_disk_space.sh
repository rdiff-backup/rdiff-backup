#!/bin/bash -x
# This script is an example how to make sure there is (probably) enough disk space
# before starting a backup with rdiff-backup.
# Call this script exactly as you would call rdiff-backup to make a backup (or a regress)
# e.g. `$0 backup /home/jdoe /backup`
# Obviously this only works for a local repository (pull requests welcome!)

# Reduce this (percentage) value if you want to be even surer that there is enough place
USAGE=100

# We assume the last parameter is the repository
repo="${!#}"

increments=$(rdiff-backup --parsable-output -v1 list increments ${repo} | grep -e '- ' | wc -l)
free=$(df --output=avail ${repo} | tail -n-1)
size=$(du -sx ${repo} | cut -f1)

if [[ ! ${increments} -gt 0 ]]  # empty and non-numeric values trigger this check
then
	echo "Either the repository doesn't exist or it hasn't yet been used." >&2
	echo "Use directly rdiff-backup for your first backup in this repo." >&2
	exit 1
fi

# Just a very rough estimation but should be good enough.
# We divide the size of the repo by the number of increments and assume that the
# upcoming new increment will have the same size.
# As the initial mirror is also counted, it should make sure that the result calculated
# is big enough compared to the actual delta generated by a new increment.
# If you still think it's not enough security, reduce the USAGE percentage variable.
needs=$((size/increments))

if [[ ${needs} -ge $((free * USAGE / 100 )) ]]
then
	echo "Probably not enough space for a further backup at '${repo}'." >&2
	exit 1
fi

rdiff-backup "${@}"
