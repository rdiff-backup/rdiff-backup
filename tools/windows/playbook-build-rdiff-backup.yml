---
- name: Build rdiff-backup on a prepared Windows
  hosts: windows_builders
  gather_facts: false
  tasks:
    - name: make sure working directory {{ working_dir }} exists
      win_file:
        state: directory
        path: "{{ working_dir }}"
    - name: clone the rdiff-backup sources from Git
      win_command: >
        git.exe clone
        {% if rdiff_version_tag is defined %}--branch {{ rdiff_version_tag }}{% endif %}
        {{ rdiffbackup_git_repo }}
        "{{ rdiffbackup_dir }}"
      args:
        creates: "{{ rdiffbackup_dir }}"
    - name: build rdiff-backup and package it as wheel
      win_command: >
        python.exe setup.py bdist_wheel --librsync-dir="{{ librsync_install_dir }}"
        --lflags="/NODEFAULTLIB:libcmt.lib msvcrt.lib"
      args:
        chdir: "{{ rdiffbackup_dir }}"
      register: bdist_wheel
    - name: find out the name of the wheel package just created
      set_fact:
        wheel_pkg: "{{ bdist_wheel.stdout | regex_search('rdiff_backup-[^ ]*.whl') }}"
    - name: compile rdiff-backup into an executable using pyinstaller
      win_command: >
        pyinstaller --onefile
        --paths=build/lib.win-{{ python_win_bits }}-3.7 --paths={{ librsync_install_dir }}/lib
        --paths={{ librsync_install_dir }}/bin
        --console build/scripts-3.7/rdiff-backup
        --add-data src/rdiff_backup.egg-info/PKG-INFO;rdiff_backup.egg-info
      environment:
        LIBRSYNC_DIR: "{{ librsync_install_dir }}"
      args:
        chdir: "{{ rdiffbackup_dir }}"
    - name: generate a versioned and specific name for the compiled executable
      set_fact:
        bin_exe: "{{ wheel_pkg | regex_replace('^rdiff_backup', 'rdiff-backup') | regex_replace('.whl$', '.exe') }}"
    - name: rename the compiled executable
      win_shell: >
        Move-Item -Force
        -Path {{ rdiffbackup_dir }}/dist/rdiff-backup.exe 
        -Destination {{ rdiffbackup_dir }}/dist/{{ bin_exe }}
    - name: fetch generated binary files into the local dist directory
      fetch:
        src: "{{ rdiffbackup_dir }}/dist/{{ item }}"
        dest: "{{ rdiffbackup_local_dist_dir }}/"
        flat: true  # copy without the directory
      loop:
        - "{{ bin_exe }}"
        - "{{ wheel_pkg }}"

    # the following lines are not absolutely necessary but help debugging rdiff-backup

    - name: copy rsync.dll to build directory to call rdiff-backup from there
      win_copy:  # newer versions of rsync.dll are installed in bin not lib
        src: "{{ librsync_install_dir }}/bin/rsync.dll"
        remote_src: true  # file is already on the Windows machine
        dest: "{{ rdiffbackup_dir }}/build/"
      tags: debug_help
    - name: create a simple helper script to call rdiff-backup from the build dir
      win_copy:
        content: |
          REM call this script to get the right environment variable and examples
          SET PYTHONPATH={{ rdiffbackup_dir }}/build/lib.win-{{ python_win_bits }}-3.7
          REM python scripts-3.7\rdiff-backup --version
          REM python -m pdb scripts-3.7\rdiff-backup --version
        dest: "{{ rdiffbackup_dir }}/build/rdiff-backup.bat"
      tags: debug_help
