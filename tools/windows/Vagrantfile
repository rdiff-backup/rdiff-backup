# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # Our box, we will have copied it manually to:
  # 	~/.vagrant.d/boxes/MSEdgeWin10/X/libvirt
  config.vm.box = "jborean93/WindowsServer2019"
  config.vm.provider :libvirt do |libvirt|
    libvirt.memory = 8192  # installation of VS fails with too little memory
  end

  # WARNING: if following line is removed, Vagrant seems to act like it would
  # be Linux with following error:
  # At line:1 char:33
  # + ip=$(which ip); ${ip:-/sbin/ip} addr show | grep -i 'inet ' | grep -v ...
  # +                                 ~~~~
  # Unexpected token 'addr' in expression or statement.
  #    + CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException
  #    + FullyQualifiedErrorId : UnexpectedToken,Microsoft.PowerShell.Commands.InvokeExpressionCommand
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # the following parameters can be adapted, the certificate validation must
  # be ignored because the box is setup with a self-signed certificate.
  # Check ~/.vagrant.d/boxes/MSEdgeWin10/X/libvirt/Vagrantfile for other
  # parameters you may want to overwrite.
  config.vm.provision "ansible" do |ansible|
    ansible.verbose = "v"
    ansible.groups = { "all:vars" => { "ansible_winrm_server_cert_validation" => "ignore" } }
    ansible.playbook = "playbook-provision-windows.yml"
  end
  config.vm.guest = :windows
  config.vm.communicator = "winrm"
  config.vm.boot_timeout = 600
  config.vm.graceful_halt_timeout = 600
  config.winrm.transport = :ssl
  config.winrm.basic_auth_only = true
  config.winrm.ssl_peer_verification = false
end
