---
name: Deploy-Linux

on:
  push:
    branches: ['*_']
    tags: ['*_', 'v[0-9]*']
  pull_request:
#    branches: [ $default-branch ]
    paths-ignore: ['docs/**']

jobs:
  build-manylinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9,3.8,3.7,3.6]
        #--- Build and deploy Linux wheels using manylinux containers ---
        # - build manylinux2010 (and manylinux1) x64
        # - build manylinux2010 i686
        # - build manylinux2014 x64
        # avoiding manylinux2014_i686 because does not provide librsync-devel
        many-linux: [2010_x86_64, 2010_i686, 2014_x86_64]
    container: quay.io/pypa/manylinux${{ matrix.many-linux }}
    steps:
    - uses: actions/checkout@v2
    - name: create manylinux wheel(s)
      run: |
        if [[ ${{ matrix.many-linux }} != *64 ]]; then PRE_CMD=linux32; fi
        py=$(echo ${{ matrix.python-version }} | tr -d .
        plat=manylinux_${{ matrix.many-linux }}
        $PRE_CMD tools/build_wheels.sh . ${plat} /opt/python/cp${py}*/bin
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux-artifacts
        path: dist/*.whl
        if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: [build-manylinux]
    steps:
    - name: Download artifacts
      id: download
      uses: actions/download-artifact@v2
      with:
        name: linux-artifacts
        path: dist
    - name: Export artifacts
      id: export
      run: echo ::set-output name=artifact_files::${{ steps.download.outputs.download-path }}/*.*
      # see https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
    - name: Create release and upload assets
      uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        name: Release ${{ github.ref }}
        draft: true
        prerelease: true
        files: ${{ steps.export.outputs.artifact_files }}
        gzip: false

# TODO build debian and sdist + release to pypi depending on tag

#=== DEPLOYMENTS ===
# - everything to GitHub releases
# - wheels to PyPI (if tag looks like an alpha, beta, rc or final release)
# - sdist to PyPI (if tag looks like an alpha, beta, rc or final release)
# - wheels to Test PyPI (if tag looks like a development release)
# - sdist to Test PyPI (if tag looks like a development release)

#deploy:
#  - provider: releases
#    file_glob: true
#    file: dist/rdiff*.*
#    skip_cleanup: true
#    draft: true
#    token:
#      secure: V1Ad29+3lIQB1Sxqt8RiNKwferucTIr2mJo1Ka0m8Y1GdscP0ZkvHN4Vzjb0hts+lap8cU24tJ1zq9k22bdsNmoS3/YEg7fwbQSOPCJSYbjwMQeitDc1NP3u1mp5LWiEnQ7cflalIkmWUVpwGbwPSnUQdW3JyheUm4DP6jndGHmv3sC2r4WtZDkVY44SI5OGjvOTStTLnXhVlwXMIBKzw+o9BNdmIcpRvI3UTR+C9mA2yoNE7qgpzALZ4qn7qAmTMJzcVQb22yVZqXVCF8VD72Z66GHx75aatMmsJ/2isOEap19sVYt03fY8lchsTUsdRRCAIInxUvbdfgaEoBWj8Vfv2r/vm5DgWh93amv1RkJdmAYAMTGZG/k20vd7N+sNGKCdAF0W8hj5kriGkNnSQg7dFd+NWrF3pX9XcUkT9IGzv5eT5eYeS+yzgB3YPy8qGKwF5dRkRf7Ylw68j8YOly40rAAfgEx/pcFlYrJh62LDPr5RNhKA679+9UAp0rgkiszNH327bj1i0drqeDIhJAZSXw86B8tJZI1JRBVllKNbwDc5GRFNyms4+pvKCO+lAy5Pcn0bQMUq49qxDsdnM1t2RISivWy5CdkOTNW5WYglhovOSoA8/NjcxmsOpOazCaENEvsB3AogI+LRmpZ7lUZKxjaILuVUM2rwXlKxFB0=
#    on:
#      tags: true
#      all_branches: true
#      condition: $MAKE_STEP == ?dist*
#  # we use beta/alpha/rc/final version tags to release to pypi.org
#  - provider: pypi
#    user: "__token__"
#    password:
#      secure: QGprJSAZR3X88Ir4qpJpNdel5m6CngEtYlD2DAgwRuyPHClhMhXcayB7NbRqACRdtsqBBdQHSOnPO6jBcrhvTIeFbyhiSWZKME113yn4RFD3E+z/p8otb02Lk0DvFTakeC2qxsJ1nlwxGte7qT5Ac9dL7U5O3SSlWNoq2c3QmoD/d+fVdtjf6tp4QywlOIr4Jyx2WWFBQDSQB2cjY7YfwgcQchXkOoVog83dUID4pTh15HlM1Q9E8k0EKueGrDVkS3hhlbPimv1C1coM/IAIAXaTSR1AZZCZELsVSbBOW1hMaAL4MPpr9ekKx/eErnZiIkCuovBTk0XKvzfOyPluFjnuxazKWH9EU5WutCzfxtXh29fLNLYKaqalgjI024kvzTxVFtxJFvCcnhEjcqgs6sxh4nrzAosK163LViFRlJjgbT+2kVgeWiA51fjFTdIj0ep3/NMN8SgvSWQu7SRA8Vtxx9NLzTu57QPKZdRLOW98XUnnSwWPvFymNJ3JHQtp3tsRvTaLcbECvpI82bQa/9+MEszGXwm5TdM3Ogie7OUgDReq6fYbSCYXli5800QwA8Zj6zwJH2qG7l2VAPm0Gd0O9RPP/U2DCxDVAHPDV8VYzKsLWeCQ0Rsxz0S0d1r1Vss15rZ/C/RaCXUJB9ba4F1uRMh4l8Jm4/eSAcuAryI=
#    distributions: bdist_wheel
#    skip_existing: true
#    skip_cleanup: true
#    on:
#      tags: true
#      all_branches: true
#      condition: $MAKE_STEP =~ ^(bdist_wheel)$ && $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+((a|b|rc)[0-9]+)?$
#      # TODO add |bdist_win to release also Windows wheel
#  - provider: pypi
#    user: "__token__"
#    password:
#      secure: QGprJSAZR3X88Ir4qpJpNdel5m6CngEtYlD2DAgwRuyPHClhMhXcayB7NbRqACRdtsqBBdQHSOnPO6jBcrhvTIeFbyhiSWZKME113yn4RFD3E+z/p8otb02Lk0DvFTakeC2qxsJ1nlwxGte7qT5Ac9dL7U5O3SSlWNoq2c3QmoD/d+fVdtjf6tp4QywlOIr4Jyx2WWFBQDSQB2cjY7YfwgcQchXkOoVog83dUID4pTh15HlM1Q9E8k0EKueGrDVkS3hhlbPimv1C1coM/IAIAXaTSR1AZZCZELsVSbBOW1hMaAL4MPpr9ekKx/eErnZiIkCuovBTk0XKvzfOyPluFjnuxazKWH9EU5WutCzfxtXh29fLNLYKaqalgjI024kvzTxVFtxJFvCcnhEjcqgs6sxh4nrzAosK163LViFRlJjgbT+2kVgeWiA51fjFTdIj0ep3/NMN8SgvSWQu7SRA8Vtxx9NLzTu57QPKZdRLOW98XUnnSwWPvFymNJ3JHQtp3tsRvTaLcbECvpI82bQa/9+MEszGXwm5TdM3Ogie7OUgDReq6fYbSCYXli5800QwA8Zj6zwJH2qG7l2VAPm0Gd0O9RPP/U2DCxDVAHPDV8VYzKsLWeCQ0Rsxz0S0d1r1Vss15rZ/C/RaCXUJB9ba4F1uRMh4l8Jm4/eSAcuAryI=
#    distributions: sdist
#    skip_existing: true
#    skip_cleanup: true
#    on:
#      tags: true
#      all_branches: true
#      condition: $MAKE_STEP == sdist && $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+((a|b|rc)[0-9]+)?$
#  # we use dev version tags to release to test.pypi.org
#  - provider: pypi
#    user: "__token__"
#    password:
#      secure: KYfWfkPfllpPq+qkAXiX5KEPNrPu/L46DkZ1H6VWE69zQMuuTdlfC4UiQ28tt5HeeFt7Wxnn1JlfWuaFhIZx+xMa3oa3ln9BINXZmfMUcX6xpK5Uegtd8Y0ywiZJsd5PN1ZmthfgWTLJ9mJydYb13OpgzNxqpO9eiYz/4xpnSm7zG5OYfmzt5gR+CbzIEcL0VS15Os7i/aCEes32HNcqyl4Dwx7mJ0lFgzRTChYTzsifrtD4XmH6p5H+WrPIx336Wz/8jrBgcM20kXwHiyWGjg7gnWCx8+fcPhHWa0e3iC48KoSd3ixeK1QyrPt2jbUtuMmB6x5yM/fxloWyMCj8W0jU1jJgzrZA3TzV2EPym54BoDz2lZ1xTeAxeCk1nYcA6wT6Xea6MwSGTvV/qPLEnXIafEt9bcD0ox+JfCjNVrw3baQqnwAWnyKCFKYJ3IHJCXz23J26pLlv10DgEtxI5/U2nUU/Nx9f/fJn/CJlz1X1TOFygqPICoUSE3t4jsqbLbA48UJz6fZnzSwFO2FN+wGUqudq/JkAaRcLu4/W+1f4HrQ5UVk8Ql4wDUS3iBr8FYsQ+S8fxvHRJGaCVSO1KCUcX//DHV3iB2VwDNHiD8zF3FtRuyODpFbo5BlL3eIX5w1dCTx/6SgDpNb/PofkQdaHi6woIzX+8zoymMT+4QA=
#    distributions: bdist_wheel
#    skip_existing: true
#    skip_cleanup: true
#    server: https://test.pypi.org/legacy/
#    # FIXME workaround to make deploy possibly work under Windows, remove once released
#    edge:
#      source: native-api/dpl
#      branch: z-quotes
#    on:
#      tags: true
#      all_branches: true
#      condition: $MAKE_STEP =~ ^(bdist_wheel)$ && $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+((a|b|rc)[0-9]+)?\.dev[0-9]+$
#      # TODO add |bdist_win to release also Windows wheel
#  - provider: pypi
#    user: "__token__"
#    password:
#      secure: KYfWfkPfllpPq+qkAXiX5KEPNrPu/L46DkZ1H6VWE69zQMuuTdlfC4UiQ28tt5HeeFt7Wxnn1JlfWuaFhIZx+xMa3oa3ln9BINXZmfMUcX6xpK5Uegtd8Y0ywiZJsd5PN1ZmthfgWTLJ9mJydYb13OpgzNxqpO9eiYz/4xpnSm7zG5OYfmzt5gR+CbzIEcL0VS15Os7i/aCEes32HNcqyl4Dwx7mJ0lFgzRTChYTzsifrtD4XmH6p5H+WrPIx336Wz/8jrBgcM20kXwHiyWGjg7gnWCx8+fcPhHWa0e3iC48KoSd3ixeK1QyrPt2jbUtuMmB6x5yM/fxloWyMCj8W0jU1jJgzrZA3TzV2EPym54BoDz2lZ1xTeAxeCk1nYcA6wT6Xea6MwSGTvV/qPLEnXIafEt9bcD0ox+JfCjNVrw3baQqnwAWnyKCFKYJ3IHJCXz23J26pLlv10DgEtxI5/U2nUU/Nx9f/fJn/CJlz1X1TOFygqPICoUSE3t4jsqbLbA48UJz6fZnzSwFO2FN+wGUqudq/JkAaRcLu4/W+1f4HrQ5UVk8Ql4wDUS3iBr8FYsQ+S8fxvHRJGaCVSO1KCUcX//DHV3iB2VwDNHiD8zF3FtRuyODpFbo5BlL3eIX5w1dCTx/6SgDpNb/PofkQdaHi6woIzX+8zoymMT+4QA=
#    distributions: sdist
#    skip_existing: true
#    skip_cleanup: true
#    server: https://test.pypi.org/legacy/
#    # FIXME workaround to make deploy possibly work under Windows, remove once released
#    edge:
#      source: native-api/dpl
#      branch: z-quotes
#    on:
#      tags: true
#      all_branches: true
#      condition: $MAKE_STEP == sdist && $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+((a|b|rc)[0-9]+)?\.dev[0-9]+$
#
##=== ADDITIONAL JOBS ===
#
#    #--- Build Debian packages ---
#    - os: linux
#      language: shell
#      env: MAKE_STEP=dist_deb RUN_COMMAND=
#      addons:
#        apt:
#          packages:  # make sure these match debian/control contents
#            - build-essential
#            - debhelper-compat
#            - dh-python
#            - fakeroot
#            - git-buildpackage
#            - librsync-dev
#            - python3-all-dev
#            - python3-pylibacl
#            - python3-pyxattr
#            - python3-setuptools
#            - python3-setuptools-scm
#      install:
#        - echo "No pip here"
#      script:
#        - make $MAKE_STEP
#        - cat ../*.changes
#
#    #--- Build and deploy Debian packages ---
#    - os: linux
#      env: MAKE_STEP=sdist RUN_COMMAND=
#      install:
#        - echo "No pip here"
#      script:
#        - make $MAKE_STEP
#        - ls dist/
