language: python

os: linux
dist: bionic

install: pip3 install --upgrade pip tox pyxattr pylibacl setuptools-scm auditwheel

python:
  - 3.5
  - 3.6
  - 3.7
  - 3.8

deploy:
  provider: releases
  file_glob: true
  file: wheelhouse/*.whl
  skip_cleanup: true
  draft: true
  api_key:
    secure: tHUhJ+e55wS+eedqv/fECriaa0tgdBAz51tMHZIV2ng2Mo59KEgoauMvGryCRG1GU2X408wL0EmVVFQgq62z/cPMCB9rJw87kldohNGXps5T0EvmH+8qUfWo9eqpvM3Z7rDXsLcm5KkrJ72IcMt+lV+1y0cTCIRNY16zWZ9/WhkSZcRcTxc2ZiReErZYJkZxfAsOgJVmvxA6h7CTHvXb6JOTqdgvGCJACN3iD4HhlMJeCH5ulzP7rCpraA1qA8OcPNF2v41xByAdveDsl7d51fUmM2z7GZDbQm/3aDITW+zhyBhLcJKlchLyIXvBk6TiBrNCjC0yG/8weAeTV568zYSNobSZisYVkU0OwEAjH0z81saC3T9SE95pnKOYjcaciWptdX7U6KyuAx40VVBO7bBwg7ollcrf9N4ZvnF+usKkFa1m2zSCqSRlGTUyV6yHgvlUtyfWKE6my8PYeba69zjy5oRnW8NQkMt84yVIdnBzghKJs95CQ0/08JF7c6tP4KAFQFTtMbFkw85d0ZfnmamzADNSPCcLvxSO+e0WgzcEoRGHSm0LCAWoBEhWTxh4tCQoxxekgwAU6Ibik+3ROiDdpNeOcV8tuttOkRcEKs5Tt1jkdYDSHEVXh6hpxQ9KaXEog5U1WQexsfYkZp10h/7sqJVRUP66zhlj89x3VAQ=
  on:
    all_branches: true
    condition: $MAKE_STEP = bdist_wheel

matrix:
  include:
   # Build and deploy Windows executable
   - os: windows
     language: sh
     before_install:
       - git clone https://github.com/pyenv-win/pyenv-win.git $HOME/.pyenv
       - export PATH="$HOME/.pyenv/pyenv-win/bin:$HOME/.pyenv/pyenv-win/shims:$PATH"
       - export pyver=3.7.5
       - export pyverbrief=${pyver:0:3}
       - pyenv install --list
       - pyenv install -q $pyver || pyenv rehash
       - pyenv global $pyver
       - pyenv rehash
       - pyenv local $pyver
       - python --version
     install:
       - pip install --upgrade tox pywin32 setuptools-scm PyInstaller
       - pyenv rehash
       - git clone -b v2.2.1 https://github.com/librsync/librsync.git $HOME/.librsync
       - export LIBRSYNC_DIR=$HOME/librsync
       - pushd $HOME/.librsync
       - cmake -DCMAKE_INSTALL_PREFIX=$LIBRSYNC_DIR -A Win32 -DBUILD_SHARED_LIBS=OFF .
       - cmake --build . --config Release
       - cmake --install . --config Release
       - popd
     script:
       - python setup.py bdist
       - PyInstaller --onefile --distpath dist/win32 --paths=build/lib.win32-$pyverbrief --add-data=src/rdiff_backup.egg-info/PKG-INFO\;rdiff_backup.egg-info --console build/scripts-$pyverbrief/rdiff-backup
     before_deploy:
       - cp CHANGELOG COPYING README.md docs/FAQ.md docs/examples.md docs/DEVELOP.md docs/Windows-README.md dist/win32
       - version=`python setup.py --version`
       - pushd dist/win32
       - 7z a -tzip rdiff-backup-$version.zip *
       - popd
     deploy:
       provider: releases
       file_glob: true
       file: dist/win32/rdiff-backup*.zip
       skip_cleanup: true
       draft: true
       api_key:
         secure: tHUhJ+e55wS+eedqv/fECriaa0tgdBAz51tMHZIV2ng2Mo59KEgoauMvGryCRG1GU2X408wL0EmVVFQgq62z/cPMCB9rJw87kldohNGXps5T0EvmH+8qUfWo9eqpvM3Z7rDXsLcm5KkrJ72IcMt+lV+1y0cTCIRNY16zWZ9/WhkSZcRcTxc2ZiReErZYJkZxfAsOgJVmvxA6h7CTHvXb6JOTqdgvGCJACN3iD4HhlMJeCH5ulzP7rCpraA1qA8OcPNF2v41xByAdveDsl7d51fUmM2z7GZDbQm/3aDITW+zhyBhLcJKlchLyIXvBk6TiBrNCjC0yG/8weAeTV568zYSNobSZisYVkU0OwEAjH0z81saC3T9SE95pnKOYjcaciWptdX7U6KyuAx40VVBO7bBwg7ollcrf9N4ZvnF+usKkFa1m2zSCqSRlGTUyV6yHgvlUtyfWKE6my8PYeba69zjy5oRnW8NQkMt84yVIdnBzghKJs95CQ0/08JF7c6tP4KAFQFTtMbFkw85d0ZfnmamzADNSPCcLvxSO+e0WgzcEoRGHSm0LCAWoBEhWTxh4tCQoxxekgwAU6Ibik+3ROiDdpNeOcV8tuttOkRcEKs5Tt1jkdYDSHEVXh6hpxQ9KaXEog5U1WQexsfYkZp10h/7sqJVRUP66zhlj89x3VAQ=
       on:
          all_branches: true
   # Build and deploy Linux wheels using manylinux Docker containers
   # avoiding manylinux2014_i686 because it does not provide librsync-devel
   - os: linux
     sudo: required
     services:
       - docker
     env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
          PLAT=manylinux1_x86_64
          MAKE_STEP=bdist_wheel
     install:
       - docker pull $DOCKER_IMAGE
     script:
       - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build_wheels.sh
       - ls wheelhouse/
   - os: linux
     sudo: required
     services:
       - docker
     env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686
          PRE_CMD=linux32
          PLAT=manylinux1_i686
          MAKE_STEP=bdist_wheel
     install:
       - docker pull $DOCKER_IMAGE
     script:
       - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build_wheels.sh
       - ls wheelhouse/
   - os: linux
     sudo: required
     services:
       - docker
     env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64
          PLAT=manylinux2010_x86_64
          MAKE_STEP=bdist_wheel
     install:
       - docker pull $DOCKER_IMAGE
     script:
       - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build_wheels.sh
       - ls wheelhouse/
   - os: linux
     sudo: required
     services:
       - docker
     env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_i686
          PRE_CMD=linux32
          PLAT=manylinux2010_i686
          MAKE_STEP=bdist_wheel
     install:
       - docker pull $DOCKER_IMAGE
     script:
       - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build_wheels.sh
       - ls wheelhouse/
   - os: linux
     sudo: required
     services:
       - docker
     env: DOCKER_IMAGE=quay.io/pypa/manylinux2014_x86_64
          PLAT=manylinux2014_x86_64
          MAKE_STEP=bdist_wheel
     install:
       - docker pull $DOCKER_IMAGE
     script:
       - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build_wheels.sh
       - ls wheelhouse/

# Don't run tests on WIP branches
branches:
  except:
    - /^WIP-.*$/

addons:
  apt:
    packages:
      - librsync-dev
      - libacl1-dev
      - rdiff  # needed by tests in tox.ini
      - patchelf # needed by auditwheel


# We utilize Docker images, thus must have a Docker service
#services:
#  - docker

# Build Docker image for development and testing
#before_script:
#  - make container

# Each env becomes a separate job. Add more Python versions to have a matrix.
env:
  - MAKE_STEP=test-static RUN_COMMAND= SUDO=sudo
  - MAKE_STEP=build RUN_COMMAND= SUDO=sudo
  - MAKE_STEP=test-runtime-base RUN_COMMAND= SUDO=sudo
  - MAKE_STEP=test-runtime-root RUN_COMMAND= SUDO=root  # see below
  - MAKE_STEP=test-runtime-slow RUN_COMMAND= SUDO=sudo

script:
  # We need the following line because travis runs already in a virtualenv
  # and tox as well, so that we need to use tricks to run as root
  # Especially the env is set _before_ the virtualenv is joined so that
  # the next line doesn't work in the "env" section
  - if [[ $SUDO == root ]]; then export SUDO="sudo -E env PATH=$PATH"; fi
  - make $MAKE_STEP

# Travis-CI cannot cache the plain testfiles due to permission errors, thus we
# have the .tar.gz stored in the cache dir to avoid too many re-downloads.
cache:
  directories:
    - $HOME/build/rdiff-backup/cache
# Runs in path /home/travis/build/rdiff-backup/rdiff-backup (git repo work directory)
# One level up is an empty directory that can be used for artifacts, cache etc.
